kibana:
  image: registry.service.dsd.io/opguk/kibana:latest
  environment:
    ELASTICSEARCH: http://elasticsearch:9200
  ports:
    - 8001:5601
  links:
    - elasticsearch
  env_file: ./env


# data on volume
elasticsearch:
  image: elasticsearch:latest
  ports:
    - 9200:9200
    - 9300:9300
  env_file: ./env


# user/pass: admin/admin
grafana:
  image: registry.service.dsd.io/opguk/grafana:latest
  ports:
    - 8002:3000
  links:
    - graphite
  env_file: ./env


logstash:
  image: registry.service.dsd.io/opguk/logstash:latest
  links:
    - redis
    - elasticsearch
    - graphite
  env_file: ./env


redis:
  image: redis:latest
  ports:
    - 6379:6379
  env_file: ./env


# data on volume
graphite:
  image: registry.service.dsd.io/opguk/graphite-statsd:latest
  ports:
    - 8003:80
    - 2003:2003
    - 2003:2003/udp
    - 8125:8125/udp
  env_file: ./env


rabbitmq:
  image: registry.service.dsd.io/opguk/rabbitmq:latest
  ports:
    - 5672:5672
  env_file: ./env


sensuserver:
  image: registry.service.dsd.io/opguk/sensu-server:latest
  links:
    - redis
    - rabbitmq
  env_file: ./env


sensuapi:
  image: registry.service.dsd.io/opguk/sensu-api:latest
  links:
    - redis
    - rabbitmq
  env_file: ./env


uchiwa:
  image: registry.service.dsd.io/opguk/uchiwa:latest
  links:
    - sensuapi
    - sensuserver
  ports:
    - 8004:3000
  env_file: ./env


monitoringproxy:
  build: monitoring-proxy
  links:
    - redis
    - graphite
  environment:
    MONITORING_REDIS_HOST: redis:6379/0
    MONITORING_GRAPHITE: graphite
    MONITORING_NAMESPACE: myapp.prod
  env_file: ./env


# example app feeding to the monitoring stack
app:
  image: registry.service.dsd.io/opguk/nginx:latest
  links:
    - monitoringproxy:monitoring
  ports:
    - 8000:80
  env_file: ./env


#example collectd feeder
collectd:
  build: collectd
  links:
    - monitoringproxy:monitoring
  env_file: ./env
