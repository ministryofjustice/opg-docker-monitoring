RABBITMQ_TCP_LISTENERS=5672
RABBITMQ_DEFAULT_VHOST=/sensu
RABBITMQ_DEFAULT_USER=sensu
RABBITMQ_DEFAULT_PASS=sensu

SENSU_API_USER=sensu
SENSU_API_PASSWORD=sensu
SENSU_REDIS_HOST=redis
SENSU_REDIS_PORT=6379
SENSU_REDIS_DB=1

SENSU_RABBITMQ_HOST=rabbitmq
SENSU_RABBITMQ_PORT=5672
SENSU_RABBITMQ_VHOST=/sensu
SENSU_RABBITMQ_USER=sensu
SENSU_RABBITMQ_PASSWORD=sensu
SENSU_RABBITMQ_SSL=true
SENSU_RABBITMQ_SSL_CHAIN=/etc/ssl/cert.pem
SENSU_RABBITMQ_SSL_PRIVKEY=/etc/ssl/key.pem
SENSU_RABBITMQ_SSL_PORT=5671

SENSU_API_PORT=4567
SENSU_API_HOST=sensuapi

UCHIWA_HOST=0.0.0.0
UCHIWA_PORT=3000
UCHIWA_REFRESH=5

UCHIWA_SENSU_NAME=sensu
UCHIWA_SENSU_HOST=sensuapi
UCHIWA_SENSU_PORT=4567
UCHIWA_SENSU_SSL=false
UCHIWA_SENSU_INSECURE=true
UCHIWA_SENSU_USER=sensu
UCHIWA_SENSU_PASS=sensu
UCHIWA_SENSU_PATH=/sensu
UCHIWA_SENSU_TIMEOUT=5

SENSU_CLIENT_NAME=localhost
SENSU_CLIENT_METRIC_PREFIX=localhost
SENSU_CLIENT_GRAPHITE_CHECK_CMD=/opt/sensu/embedded/bin/ruby /etc/sensu/plugins/graphite-data.rb
SENSU_CLIENT_GRAPHITE_CHECK_HOST=graphite:8003

# let's simulate warning
SENSU_CLIENT_CHECKS_BASE_TEST_NAME=basetest
SENSU_CLIENT_CHECKS_BASE_TEST_COMMAND=/bin/false
SENSU_CLIENT_CHECKS_BASE_TEST_SUBSCRIBERS="all"
SENSU_CLIENT_CHECKS_BASE_TEST_INTERVAL=5

# let's simulate critical
SENSU_CLIENT_CHECKS_ROLE_TEST_NAME=roletest
SENSU_CLIENT_CHECKS_ROLE_TEST_COMMAND=exit 2
SENSU_CLIENT_CHECKS_ROLE_TEST_SUBSCRIBERS="all"
SENSU_CLIENT_CHECKS_ROLE_TEST_INTERVAL=5

# Example of defining a global subdue window for all Sensu (base) checks
# NOTE: BOTH are required (or neither). Not either.
SENSU_CLIENT_CHECKS_BASE_SUBDUEBEGIN=6PM UTC
SENSU_CLIENT_CHECKS_BASE_SUBDUEEND=8AM UTC

# Example of defining a per check subdue window
# NOTE: BOTH are required (or neither). Not either.
SENSU_CLIENT_CHECKS_ROLE_TEST_SUBDUEBEGIN=10PM UTC
SENSU_CLIENT_CHECKS_ROLE_TEST_SUBDUEEND=4AM UTC

# Variables for the Sensu Client check wrapper
SENSU_CLIENT_CURL_TIMEOUT=10
SENSU_CLIENT_ELASTIC_PORT=9200
SENSU_CLIENT_ELASTIC_RECENT=5m
SENSU_CLIENT_KIBANA_PORT=8001
SENSU_CLIENT_REDIS_PORT=6379
SENSU_CLIENT_RABBITMQ_PORT=5672
SENSU_CLIENT_UCHIWA_PORT=8004

# Samples to define multiple Sensu endpoints (Datacentres)
# Examples use the same host to prove the process of adding additional DCs but in reality
# each host would be a different Sensu API end point (e.g. prod, dev, pipeline, etc)

# It is VERY IMPORTANT that `UCHIWA_SENSU_MULTIPLE` accurately reflects the actual number of Data Centers defined
# and that each is fully defined. Anything not matching is likely to result in Uchiwa failing to start (either through
# confd errors or invalid json rendered).

# Number of items in the range of elements minus one (as indexing starts from zero i.e. for one element put 0)
UCHIWA_SENSU_MULTIPLE=3

# Data Centres
UCHIWA_SENSU_DC_ONE_NAME=local
UCHIWA_SENSU_DC_ONE_HOST=sensuapi
UCHIWA_SENSU_DC_ONE_PORT=4567
UCHIWA_SENSU_DC_ONE_SSL=false
UCHIWA_SENSU_DC_ONE_INSECURE=true
UCHIWA_SENSU_DC_ONE_USER=sensu
UCHIWA_SENSU_DC_ONE_PASS=sensu
UCHIWA_SENSU_DC_ONE_TIMEOUT=5
#
UCHIWA_SENSU_DC_TWO_NAME=prod
UCHIWA_SENSU_DC_TWO_HOST=sensuapi
UCHIWA_SENSU_DC_TWO_PORT=4567
UCHIWA_SENSU_DC_TWO_SSL=false
UCHIWA_SENSU_DC_TWO_INSECURE=true
UCHIWA_SENSU_DC_TWO_USER=sensu
UCHIWA_SENSU_DC_TWO_PASS=sensu
UCHIWA_SENSU_DC_TWO_TIMEOUT=10
#
UCHIWA_SENSU_DC_THREE_NAME=pipeline
UCHIWA_SENSU_DC_THREE_HOST=sensuapi
UCHIWA_SENSU_DC_THREE_PORT=4567
UCHIWA_SENSU_DC_THREE_SSL=false
UCHIWA_SENSU_DC_THREE_INSECURE=true
UCHIWA_SENSU_DC_THREE_USER=sensu
UCHIWA_SENSU_DC_THREE_PASS=sensu
UCHIWA_SENSU_DC_THREE_TIMEOUT=15
#
UCHIWA_SENSU_DC_FOUR_NAME=dev
UCHIWA_SENSU_DC_FOUR_HOST=sensuapi
UCHIWA_SENSU_DC_FOUR_PORT=4567
UCHIWA_SENSU_DC_FOUR_SSL=false
UCHIWA_SENSU_DC_FOUR_INSECURE=true
UCHIWA_SENSU_DC_FOUR_USER=sensu
UCHIWA_SENSU_DC_FOUR_PASS=sensu
UCHIWA_SENSU_DC_FOUR_TIMEOUT=20
#
BEATS_DOCKBEAT_PERIOD=5
BEATS_DOCKBEAT_SOCKET=unix:///var/run/docker.sock
BEATS_DOCKBEAT_MONITORING_HOST=localhost:9201
BEATS_DOCKBEAT_MONITORING_PROTOCOL=http
#
SHARED_DATA_BASE=/tmp
SHARED_DATA_PATHS="['/elasticsearchshareddata/beats']"
DASHBOARD_SLEEP_TIMEOUT=90


