# 100_input_syslog
input {
    tcp {
        port => 2514
        type => syslog
    }
    udp {
        port => 2514
        type => syslog
    }
}


# 101_input_redis
input {
    redis {
        host => 'redis'
        data_type => list
        key => 'logstash'
        type => 'logstash'
    }
}


# 200_filter_all
filter {
  # This is fugly, but uuid{} is problematic:
  #   * hangs our tests for 2+ mins while SecureRandom finds entropy (probably)
  #   * is causing tests to fail due to encoding as ASCII
  # So, until this is fixed, use a quick ruby hack to generate a reasonably random UUID.
  ruby {
    code => "event['@logstash_uuid'] = sprintf('%.8x-%.4x-%.4x-%.4x-%.12x', rand(16**8), rand(16**4), rand(16**4), rand(16**4), rand(16**12)) unless event['@logstash_uuid']"
  }
}


# 900_output_elasticsearch
output {
  elasticsearch {
    hosts => [
      {{if exists "/opg/logstash/elasticsearch/hostport" }}"{{ getv "/opg/logstash/elasticsearch/hostport" }}"{{else}}"elasticsearch:9200"{{end}}
    ]
    ssl => {{if exists "/opg/logstash/elasticsearch/ssl/enabled" }}{{ getv "/opg/logstash/elasticsearch/ssl/enabled" }}{{else}}false{{end}}
    ssl_certificate_verification => {{if exists "/opg/logstash/elasticsearch/ssl/certificate/verification" }}{{ getv "/opg/logstash/elasticsearch/ssl/certificate/verification" }}{{else}}false{{end}}
  }
}

# 920_output_statsd_all
output {
    statsd {
      port => 8125
      host => graphite
      increment => [
        "%{host}.events.type.%{type}",
        "%{host}.events.all"
      ]
      sender => "per-host"
    }

    statsd {
      port => 8125
      host => graphite
      increment => [
        "events.type.%{type}",
        "events.all"
      ]
      sender => "all"
    }
}

